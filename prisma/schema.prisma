// ◮◮◮ GENERATED BY AURORA ◮◮◮
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

model Demo {
  id            String    @id @default(uuid()) @db.Uuid()
  date          DateTime? @db.Date
  enum          DemoEnum?
  json          Json?     @db.JsonB
  time          DateTime? @db.Time()
  float         Float?
  testId        String?   @db.Uuid()
  tests         Test?     @relation(fields: [testId], references: [id])
  bigint        BigInt?
  boolean       Boolean?
  decimal       Decimal?  @db.Decimal(10, 2)
  integer       Int       @default(232)
  datetime      DateTime? @db.Timestamp()
  longText      String    @db.Text
  password      String?   @db.VarChar(255)
  richText      String?   @db.Text
  shortText     String    @unique @default("1sfdsfads") @db.VarChar(255)
  publishedAt   DateTime? @db.Timestamptz()
  publishedById String?   @db.Uuid()
  publishedBy   String?
  createdAt     DateTime  @default(now()) @db.Timestamptz()
  createdById   String?   @db.Uuid()
  createdBy     String?
  updatedAt     DateTime  @updatedAt @db.Timestamptz()
  updatedById   String?   @db.Uuid()
  updatedBy     String?
  deletedAt     DateTime? @db.Timestamptz()
  deletedById   String?   @db.Uuid()
  deletedBy     String?
}

model Test {
  id            String    @id @default(uuid()) @db.Uuid()
  date          DateTime? @db.Date
  demo          Demo[]
  enum          TestEnum?
  json          Json?     @db.JsonB
  name          String    @unique @default("1") @db.VarChar(255)
  time          DateTime? @db.Time()
  float         Float?
  bigint        BigInt?
  boolean       Boolean?
  decimal       Decimal?  @db.Decimal(10, 2)
  integer       Int       @default(232)
  datetime      DateTime? @db.Timestamp()
  longText      String    @db.Text
  password      String?   @db.VarChar(255)
  richText      String?   @db.Text
  publishedAt   DateTime? @db.Timestamptz()
  publishedById String?   @db.Uuid()
  publishedBy   String?
  createdAt     DateTime  @default(now()) @db.Timestamptz()
  createdById   String?   @db.Uuid()
  createdBy     String?
  updatedAt     DateTime  @updatedAt @db.Timestamptz()
  updatedById   String?   @db.Uuid()
  updatedBy     String?
}

model AdminUser {
  id                 String                    @id @default(uuid()) @db.Uuid()
  username           String                    @unique @db.VarChar(100)
  password           String?                   @db.VarChar(255)
  firstName          String?                   @db.VarChar(100)
  middleName         String?                   @db.VarChar(100)
  lastName           String?                   @db.VarChar(100)
  displayName        String?                   @db.VarChar(100)
  phoneNumber        String?                   @db.VarChar(100)
  email              String?                   @db.VarChar(100)
  resetPasswordToken String?                   @db.VarChar(255)
  registrationToken  String?                   @db.VarChar(255)
  lastLogin          DateTime?                 @db.Timestamptz()
  verifiedAt         DateTime?                 @db.Timestamptz()
  isRequiredVerify   Boolean                   @default(false)
  isActive           Boolean                   @default(true)
  blocked            Boolean                   @default(false)
  attributeValues    AdminUserAttributeValue[]
  createdAt          DateTime                  @default(now()) @db.Timestamptz()
  createdById        String?                   @db.Uuid()
  createdBy          String?
  updatedAt          DateTime                  @updatedAt @db.Timestamptz()
  updatedById        String?                   @db.Uuid()
  updatedBy          String?
  deletedAt          DateTime?                 @db.Timestamptz()
  deletedById        String?                   @db.Uuid()
  deletedBy          String?
  roles              AdminRole[]               @relation("UserRoleRelation")
}

model AdminUserAttribute {
  id              String                    @id @default(uuid()) @db.Uuid()
  name            String?
  code            String                    @unique @db.VarChar(30)
  type            UserAttributeType
  default         String?
  options         Json?
  isRequired      Boolean                   @default(false)
  isUnique        Boolean                   @default(false)
  isSystem        Boolean                   @default(false)
  readonly        Boolean                   @default(false)
  attributeValues AdminUserAttributeValue[]
  createdAt       DateTime                  @default(now()) @db.Timestamptz()
  createdById     String?                   @db.Uuid()
  createdBy       String?
  updatedAt       DateTime                  @updatedAt @db.Timestamptz()
  updatedById     String?                   @db.Uuid()
  updatedBy       String?
  deletedAt       DateTime?                 @db.Timestamptz()
  deletedById     String?                   @db.Uuid()
  deletedBy       String?
}

model AdminUserAttributeValue {
  id          String             @id @default(uuid()) @db.Uuid()
  attributeId String             @db.Uuid()
  attribute   AdminUserAttribute @relation(fields: [attributeId], references: [id])
  entityId    String             @db.Uuid()
  entity      AdminUser          @relation(fields: [entityId], references: [id])
  value       String             @db.VarChar(255)
}

model AdminRole {
  id          String            @id @default(uuid()) @db.Uuid()
  name        String            @db.VarChar(100)
  code        String            @unique @db.VarChar(100)
  description String?           @db.VarChar(100)
  isSystem    Boolean           @default(false)
  createdAt   DateTime          @default(now()) @db.Timestamptz()
  createdById String?           @db.Uuid()
  createdBy   String?
  updatedAt   DateTime          @updatedAt @db.Timestamptz()
  updatedById String?           @db.Uuid()
  updatedBy   String?
  deletedAt   DateTime?         @db.Timestamptz()
  deletedById String?           @db.Uuid()
  deletedBy   String?
  permissions AdminPermission[] @relation("PermissionAdminRoleRelation")
  users       AdminUser[]       @relation("UserRoleRelation")
}

model AdminPermission {
  id          String      @id @default(uuid()) @db.Uuid()
  action      String      @unique @db.VarChar(100)
  subject     String?     @db.VarChar(100)
  properties  Json?       @db.JsonB
  conditions  Json?       @db.JsonB
  isSystem    Boolean     @default(false)
  createdAt   DateTime    @default(now()) @db.Timestamptz()
  createdById String?     @db.Uuid()
  createdBy   String?
  updatedAt   DateTime    @updatedAt @db.Timestamptz()
  updatedById String?     @db.Uuid()
  updatedBy   String?
  deletedAt   DateTime?   @db.Timestamptz()
  deletedById String?     @db.Uuid()
  deletedBy   String?
  roles       AdminRole[] @relation("PermissionAdminRoleRelation")
}

model ContentType {
  id                 String    @id @default(uuid()) @db.Uuid()
  contentTypesSchema Json      @db.JsonB
  createdAt          DateTime  @default(now()) @db.Timestamptz()
  createdById        String?   @db.Uuid()
  createdBy          String?
  updatedAt          DateTime  @updatedAt @db.Timestamptz()
  updatedById        String?   @db.Uuid()
  updatedBy          String?
  deletedAt          DateTime? @db.Timestamptz()
  deletedById        String?   @db.Uuid()
  deletedBy          String?
}

enum DemoEnum {
  morning
  afternoon
  evening
  noon
}

enum TestEnum {
  morning
  afternoon
  evening
}

enum UserAttributeType {
  INTEGER
  DECIMAL
  VARCHAR
  TEXT
  DATETIME
  BOOLEAN
}